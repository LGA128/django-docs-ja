=========================
"contrib" 下のアドオン
=========================

:revision-up-to: 3491 (release 0.95)

Django は Python の "batteries included" 哲学を目指しています． Django には
Web 開発における課題を解くための様々な外部オプションツールがついてきます．

これらのコードは Django 配布物中の ``django/contrib`` にあります．
``contrib`` 下のパッケージの概要を以下に示します:

admin
=====

Django の自動化管理インタフェースです．詳しくは `チュートリアルその 2`_ を
参照してください．

.. _`チュートリアルその 2`: tutorial02.html
.. _Tutorial 2: http://www.djangoproject.com/documentation/tutorial2/

auth
====

Django の認証フレームワークです．詳しくは `認証のドキュメント`_ を参照して
下さい．

.. _`認証のドキュメント`: authentication.html

comments
========

単純かつ柔軟なコメントシステムです．まだドキュメントはありません．

contenttypes
============

コンテンツの「タイプ」をフックするための軽量フレームワークです．インストー
ルした Django モデルはそれぞれ固有のコンテンツタイプになります．まだドキュ
メントはありません．

csrf
====

クロスサイトリクエストフォージェリ (Cross Site Request Forgeries) を阻止す
るためのミドルウェアです．

`csrf のドキュメント`_ を参照してください．

.. _`csrf のドキュメント`: csrf.html
.. _csrf documentation: http://www.djangoproject.com/documentation/csrf/

humanize
========

データに「人間くささ (human touch)」を与えるための Django テンプレートフィ
ルタです。これらのフィルタを有効にするには、 ``INSTALLED_APPS`` 設定に
``'django.contrib.humanize'`` を加えます。インストール後、テンプレート上で
``{% load humanize %}`` を呼び出せば、以下のフィルタを利用できるようになり
ます:

apnumber
--------

1-9 の数字に対して、数をアルファベットで表します。それ以外の数はそのまま数
字で返します。これは Associated Press の書式に従っています。

例:

    * ``1`` は ``'one'`` になります
    * ``2`` は ``'two'`` になります。
    * ``10`` は ``10`` になります。

渡す値は整数でも、整数を文字列で表したものでもかまいません。

intcomma
--------

整数を三桁ごとにカンマで区切った形式の文字列に変換します。

例:

    * ``4500`` は ``'4,500'`` になります。
    * ``45000`` は ``'45,000'`` になります。
    * ``450000`` は ``'450,000'`` になります。
    * ``4500000`` は ``'4,500,000'`` になります。

渡す値は整数でも、整数を文字列で表したものでもかまいません。

intword
-------

大きな整数を読みやすいテキスト表現に変換します。100 万を超えるような値を扱
う場合に便利です。

例:

    * ``1000000`` は ``'1.0 million'`` になります。
    * ``1200000`` は ``'1.2 million'``  になります。
    * ``1200000000`` は ``'1.2 billion'``  になります。

Values up to 1000000000000000 (one quadrillion) are supported.

渡す値は整数でも、整数を文字列で表したものでもかまいません。

ordinal
-------

整数を序数形式の文字列に変換します。

例:

    * ``1`` は ``'1st'`` になります。
    * ``2`` は ``'2nd'`` になります。
    * ``3`` は ``'3rd'`` になります。

渡す値は整数でも、整数を文字列で表したものでもかまいません。


flatpages
=========

「フラット (flat) な」 HTML コンテンツをデータベースで扱うためのフレームワー
クです．

`flatpages のドキュメント`_ を参照してください．

.. _`flatpages のドキュメント`: flatpages.html
.. _flatpages documentation: http://www.djangoproject.com/documentation/flatpages/



markup
======

テンプレートフィルタの集まりです．以下の 3 つのマークアップ言語に対するフィ
ルタを実装しています:

    * Textile
    * Markdown
    * ReST (ReStructured Text)

詳しくは、 django/contrib/markup/templatetags/markup.py のソースコードを参
照してください。

redirects
=========

リダイレクトを管理するためのフレームワークです．

`redirects のドキュメント`_ を参照してください．

.. _`redirects のドキュメント`: redirects.html
.. _redirects documentation: http://www.djangoproject.com/documentation/redirects/


sessions
========

セッション管理のためのフレームワークです．

`セッションのドキュメント`_ を参照してください．

.. _`セッションのドキュメント`: sessions.html

sites
=====

一つのデータベースと Django を使って複数のウェブサイトを操作できるようにす
るための軽量フレームワークです．このフレームワークを使うと，オブジェクトを
特定の (一つまたは複数の) サイトに関連づけできます．

`sites のドキュメント`_ を参照してください．

.. _`sites のドキュメント`: sites.txt
.. _sites documentation: http://www.djangoproject.com/documentation/sites/


syndication
===========

RSS および Atom 形式の配信フィード (syndication feed) をごく簡単に生成する
ためのフレームワークです．

`配信フィードフレームワークのドキュメント`_ を参照してください．

.. _`配信フィードフレームワークのドキュメント`: syndication_feeds.html
.. _syndication documentation: http://www.djangoproject.com/documentation/syndication/



その他のアドオン
=================

``contrib`` に入れたらよいと思う機能について何かアイデアがあるなら，是非教
えて下さい! コードを書いて， `django-users mailing list`_ に送って下さい．

.. _django-users mailing list: http://groups.google.com/group/django-users
