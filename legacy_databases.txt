==================================
古いデータベースの組み込み
==================================

:revision-up-to: 4269 (0.96-pre SVN)

Django が最も得意とするのは新たなアプリケーションですが，古いデータベースの
組み込みも可能です． Django には組み込み作業を可能な限り自動化するための二
つのユーティリティが付属しています．

このドキュメントでは，読者は `公式チュートリアル`_ でカバーされている
Django の基礎を良く知っているものと仮定しています．

.. _`公式チュートリアル`: tutorial01.html
.. _official tutorial: http://www.djangoproject.com/documentation/tutorial1/

.. _Give Django your database parameters:

Django にデータベースパラメタを指定する
=======================================

まず，データベースへの接続パラメタとデータベース名を Django に指示する必要
があります． `設定ファイル`_ の以下の設定を編集してください:

    * `DATABASE_NAME`_
    * `DATABASE_ENGINE`_
    * `DATABASE_USER`_
    * `DATABASE_PASSWORD`_
    * `DATABASE_HOST`_
    * `DATABASE_PORT`_

.. _`設定ファイル`: settings.html
.. _DATABASE_NAME: settings.html#database-name
.. _DATABASE_ENGINE: settings.html#database-engine
.. _DATABASE_USER: settings.html#database-user
.. _DATABASE_PASSWORD: settings.html#database-password
.. _DATABASE_HOST: settings.html#database-host
.. _DATABASE_PORT: settings.html#database-port

.. _settings file: 
    http://www.djangoproject.com/documentation/settings/
.. DATABASE_NAME: 
    http://www.djangoproject.com/documentation/settings/#database-name
.. DATABASE_ENGINE: 
    http://www.djangoproject.com/documentation/settings/#database-engine
.. DATABASE_USER: 
    http://www.djangoproject.com/documentation/settings/#database-user
.. DATABASE_PASSWORD: 
    http://www.djangoproject.com/documentation/settings/#database-password
.. DATABASE_HOST: 
    http://www.djangoproject.com/documentation/settings/#database-host
.. DATABASE_PORT: 
    http://www.djangoproject.com/documentation/settings/#database-port

.. _Auto-generate the models:

モデルの自動生成
================

Django には，既存のデータベースにイントロスペクションを行ってモデルを生成で
きるユーティリティが付属しています．出力を見るには以下のコマンドを実行しま
す::

    django-admin.py inspectdb --settings=path.to.settings

標準の Unix 出力リダイレクションを使って，この内容をファイルに保存しておき
ます::

    django-admin.py inspectdb --settings=path.to.settings > appname.py

この機能はショートカット目的で，正しいモデル生成を行うためのものではありま
せん．詳しくは `django-admin.py のドキュメント`_ を参照してください．

モデルを削除し終えたら，モジュールをアプリケーションの ``models.py`` 
に入れ，アプリケーションを収めているパッケージ内に配置し，
``INSTALLED_APPS`` 設定にアプリケーションを追加しておきます．

.. _django-admin.py のドキュメント: django-admin.html
.. _django-admin.py documentation: http://www.djangoproject.com/documentation/django_admin/

.. _Install the core Django tables:

Django のコアデータテーブルのインストール
=========================================

次に， ``django-admin.py syncdb`` コマンドを実行して， Django のコアデータ
テーブルをデータベースにインストールします::

    django-admin.py syncdb --settings=path.to.settings


.. _See whether it worked:

うまく動作するか確認する
========================

これだけです． Django データベース API を使ってアプリケーションのデータにア
クセスしたり， Django admin サイトでオブジェクトを編集してみたりしてくださ
い．


