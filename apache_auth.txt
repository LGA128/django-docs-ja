===================================================
Apache での認証に Django のユーザデータベースを使う
===================================================

:revision-up-to: 4427 (0.96-pre SVN)

Apache を使っていると，同期を保ちながら複数の認証データベースを維持するとい
う問題によくぶつかります．そこで， Django の `認証システム`_ に対して直接
Apache から認証をかけるよう設定できます．例えば以下のような処理を実現できま
す:

    * 認証ユーザだけを対象に，静的ファイル／メディアファイルを Apache から
      直接提供できます．

    * 特定のパーミッションを持つ Django ユーザだけに Subversion_ リポジト
      リへのアクセスを許すよう認証をかけられます．

    * mod_dav_ で作成した WebDAV 共有への接続を特定ユーザに許可できます．

.. _Configuring Apache:

Apache の設定
=============

Django の認証データベースを Apache 設定ファイルからチェックするには
mod_python の標準の ``Auth*`` および ``Require`` ディレクティブと共に，
``PythonAuthenHandler`` ディレクティブを使います::

    <Location /example/>
        AuthType basic
        AuthName "example.com"
        Require valid-user

        SetEnv DJANGO_SETTINGS_MODULE mysite.settings
        PythonAuthenHandler django.contrib.auth.handlers.modpython
    </Location>

デフォルトでは，認証ハンドラは staff のマークのついたメンバだけに
``/example/`` へのアクセスを制限します．この挙動を変更したければ，
以下の ``PythonOption`` ディレクティブを使います:

    ================================  =========================================
    ``PythonOption``                  説明
    ================================  =========================================
    ``DjangoRequireStaffStatus``      ``on`` に設定すると， "staff" ユーザ
                                      (``is_staff`` フラグの立っているユーザ)
                                      だけにアクセスを許可します．

                                      デフォルトは ``on`` です．

    ``DjangoRequireSuperuserStatus``  ``on`` に設定すると，スーパユーザ
                                      (``is_superuser`` フラグの立っている
                                      ユーザ) だけにアクセスを許可します．

                                      デフォルトは ``off`` です．

    ``DjangoPermissionName``          アクセスに必要なパーミッションの名前
                                      です．詳しくは 
                                      `カスタムのパーミッション`_ を参照
                                      してください．

                                      デフォルトでは特定のパーミッションを
                                      必要としません．
    ================================  =========================================

場合によって， ``SetEnv`` が mod_python の設定としてうまく働かない場合があ
ります．この原因はよくわかっていません． mod_python が
``DJANGO_SETTINGS_MODULE`` をうまく認識できない場合， ``SetEnv`` の代りに
``PythonOption`` を使ってみて下さい．以下の二つのディレクティブは同じ意味で
す::

    SetEnv DJANGO_SETTINGS_MODULE mysite.settings
    PythonOption DJANGO_SETTINGS_MODULE mysite.settings


.. _`認証システム`: ../authentication/
.. _authentication system: ../authentication/
.. _Subversion: http://subversion.tigris.org/
.. _mod_dav: http://httpd.apache.org/docs/2.0/mod/mod_dav.html
.. _`カスタムのパーミッション`: ../authentication/#custom-permissions
.. _custom permissions: ../authentication/#custom-permissions
