.. _intro-whatsnext:

=================
What to read next
=================

:revision-up-to: 8961 (1.0)

.. TBD::

So you've read all the :ref:`introductory material <intro-index>` and have
decided you'd like to keep using Django. We've only just scratched the surface
with this intro (in fact, if you've read every single word you've still read
less than 10% of the overall documentation).

So what's next?

Well, we've always been big fans of learning by doing. At this point you should
know enough to start a project of your own and start fooling around. As you need
to learn new tricks, come back to the documentation.

We've put a lot of effort into making Django's documentation useful, easy to
read and as complete as possible. The rest of this document explains more about
how the documentation works so that you can get the most out of it.

(Yes, this is documentation about documentation. Rest assured we have no plans
to write a document about how to read the document about documentation.)

Finding documentation
=====================

Django's got a *lot* of documentation -- almost 200,000 words -- so finding what
you need can sometimes be tricky. A few good places to start the :ref:`search`
and the :ref:`genindex`.

Or you can just browse around!

How the documentation is organized
==================================

Django's main documentation is broken up into "chunks" designed to fill
different needs:

    * The :ref:`introductory material <intro-index>` is designed for people new
      to Django -- or to web development in general. It doesn't cover anything
      in depth, but instead gives a high-level overview of how developing in
      Django "feels".
      
    * The :ref:`topic guides <topics-index>`, on the other hand, dive deep into
      individual parts of Django. There are complete guides to Django's
      :ref:`model system <topics-db-index>`, :ref:`template engine
      <topics-templates>`, :ref:`forms framework <topics-forms-index>`, and much
      more.`
      
      This is probably where you'll want to spent most of your time; if you work
      your way through these guides you should come out knowing pretty much
      everything there is to know about Django.

    * Web development is often broad, not deep -- problems span many domains.
      We've written a set of :ref:`how-to guides <howto-index>` that answer
      common "How do I ...?" questions. Here you'll find information about
      :ref:`generating PDFs with Django <howto-outputting-pdf>`, :ref:`writing
      custom template tags <howto-custom-template-tags>`, and more.

      Answers to really common questions can also be found in the :ref:`FAQ
      <faq-index>`.

    * The guides and how-to's don't cover every single class, function, and
      method available in Django -- that would be overwhelming when you're
      trying to learn. Instead, details about individual classes, functions,
      methods, and modules are kept in the :ref:`reference <ref-index>`. This is
      where you'll turn to find the details of a particular function or
      whathaveyou.
    
    * Finally, there's some "specialized" documentation not usually relevant to
      most developers. This includes the :ref:`release notes <releases-index>`,
      :ref:`documentation of obsolete features <obsolete-index>`,
      :ref:`internals documentation <internals-index>` for those who want to add
      code to Django itself, and a :ref:`few other things that simply don't fit
      elsewhere <misc-index>`.
      

.. _How documentation is updated:

ドキュメント更新の方針
======================

Django のコードベースが毎日のように開発と改良を重ねているように，ドキュメン
トも常に改良を重ねています．ドキュメントの改良は以下のような理由に基づいて
行われます:

    * 文法やタイプミスなどの誤りを修正する場合．

    * 既存の内容に対して，新たに情報や例題を追加する場合．

    * まだ解説されていない Django の機能をドキュメント化する場合 (未ドキュ
      メントの機能は減りつつありますが，まだいくつか残っています)．

    * 新たな機能が追加され，ドキュメントも追加する場合．あるいは， Django
      の API や挙動が変更された場合．

Django のドキュメントはコードと同じソースコード管理システム下にあり，
Subversion リポジトリの `django/trunk/docs`_ ディレクトリ以下に置かれていま
す．各ドキュメントは，例えば「汎用ビュー」フレームワークや，データベースモ
デルの構築方法といった具合に，個別のトピックごとに別々のテキストファイルに
なっています．

.. _django/trunk/docs: http://code.djangoproject.com/browser/django/trunk/docs

.. _Where to get it:

ドキュメントの入手
==================

Django のドキュメントを入手するにはいくつか方法があります．おすすめの順に以
下に示します:

.. _On the Web:

Web から
--------

Django ドキュメントの最新版は http://docs.djangoproject.com/en/dev/
にあります．ここにある HTML ページは，ソースコード管理システム上のテキスト
ファイルから自動生成されているものです．従って，これらのファイルは「最新最
良の」 Django に対応しています．つまり，最近の修正や追加事項を反映していて，
まだ開発版でしか使えないような最新の機能についても部分的に解説しているわけ
です (後述の「バージョン間の相違点」を参照してください)．

ドキュメント改良のお手伝いは大歓迎です．変更すべき点，修正すべき点，改良す
べき点などを `チケットシステム`_ に提出してください．Django の開発陣がチケッ
トシステムを監視して，あなたのフィードバックが皆に恩恵をもたらすようにしま
す．

ただし，チケットは一般的なテクニカルサポートに関わる質問ではなく，ドキュメ
ント自体に関する内容にしてください． Django のセットアップに関する個別の問
題はドキュメントのコメント欄にではなく， `django-users メーリングリスト`_
や `IRC の #django チャネル`_ にお願いします．


.. _ticket system: http://code.djangoproject.com/simpleticket?component=Documentation
.. _django-users mailing list: http://groups.google.com/group/django-users
.. _#django IRC channel: irc://irc.freenode.net/django
.. _`チケットシステム`: `ticket system`_
.. _`django-users メーリングリスト`: `django-users mailing list`_
.. _`IRC の #django チャネル`: `#django IRC channel`_

.. _In plain text:

プレーンテキスト
----------------

オフラインで読みたい人や手早く読みたい人のために、Django ドキュメントはプレー
ンテキスト形式で読めます．

Django の公式リリース版を使っているなら，ソースコードのアーカイブパッケージ
(tarball) に ``docs/`` ディレクトリが入っています．このディレクトリには各リ
リースの全てのドキュメントが入っています．

Django の開発版 (いわゆる Subversion "trunk") を使っている場合， ``docs/``
ディレクトリに全てのドキュメントが入っています．最新版を取得したければ，
Python コードの更新と同様， ``svn update`` を実行してください．

最新の Django ドキュメントを Subversion から取り出すには，以下のようなシェ
ルコマンドを使います:

.. code-block:: bash

    $ svn co http://code.djangoproject.com/svn/django/trunk/docs/ django_docs


テキストドキュメントの便利でローテクな使い方の一つに Unix の ``grep`` ユー
ティリティを使った全ドキュメント検索があります．例えば，以下のようにすれば，
"max_length" について触ている部分を表示できます::

.. code-block:: bash

    $ grep -r max_length /path/to/django/docs/
    
As HTML, locally
----------------

You can get a local copy of the HTML documentation following a few easy steps:

    * Django's documentation uses a system called Sphinx__ to convert from
      plain text to HTML. You'll need to install Sphinx by either downloading
      and installing the package from the Sphinx website, or by Python's
      ``easy_install``:
      
      .. code-block:: bash
        
            $ easy_install Sphinx
    
    * Then, just use the included ``Makefile`` to turn the documentation into
      HTML:
      
      .. code-block:: bash
      
            $ cd path/to/django/docs
            $ make html
    
      You'll need `GNU Make`__ installed for this.
      
    * The HTML documentation will be placed in ``docs/_build/html``.
    
.. warning::

    At the time of this writing, Django's using a version of Sphinx not
    yet released, so you'll currently need to install Sphinx from the
    source. We'll fix this shortly.
    
__ http://sphinx.pocoo.org/
__ http://www.gnu.org/software/make/

.. _Differences between versions:

バージョン間の相違点
====================

前述したように， Subversion リポジトリに入っているテキストドキュメントは
変更や追加によって「最新最良」の状態にあります．変更によって，開発版，すな
わち Subverion ("trunk") 版の Django に新たに登場した機能がテキストに記載さ
れることがよくあります．このため， Django の各バージョン間で一貫したドキュ
メンテーションポリシをここで示しておきます．

我々は，以下のポリシに従っています:

    * djangoproject.com の第一のドキュメントは Subversion から生成される
      HTML 形式のドキュメントです．これらのドキュメントは常に最新の Django
      公式リリースと，最新のリリース *以後* に追加／変更された機能に対応し
      ています．

    * Django の開発版に機能を追加する場合，可能ならば同じ Subversion のコミッ
      トトランザクションにおいてドキュメントの変更もチェックインします．

    * 追加／変更された機能を区別するため，「バージョン X.Y で新たに追加され
      た機能です (New in version X.Y) という文を使います．X.Y は次の (開発
      中の) リリースバージョンです。

    * 特定のリリース版のドキュメントは，公式リリース時に一度フリーズされま
      す．従って，ドキュメントはその時のスナップショットです．以前のバージョ
      ンに遡ってセキュリティアップデートその他の変更を行った場合にのみ，例
      外的にドキュメントを更新します．ドキュメントのフリーズ後は，各ドキュ
      メントの冒頭に "These docs are frozen for Django version XXX" という
      一文と，ドキュメントの最新版へのリンクを追加します．

    * `Web のドキュメントメインページ`_ には，以前の全てのバージョンのドキュ
      メントに対するリンクがあります．

.. _main documentation Web page: http://docs.djangoproject.com/en/dev/
.. _`Web のドキュメントメインページ`: `main documentation Web page`_
